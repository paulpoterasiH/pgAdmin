<?$output = false;require_once("../system/security.php");require_once($sys_folder."/libs/phpDB.php");require_once($sys_folder."/libs/phpDBLib.php");$lstParams = js_unescape($cmd);$tmp = split(":", $_SESSION['ses_database']);$sys_dbType 	= 'postgres';$sys_dbIP		= $tmp[0];$sys_dbPort		= $tmp[1];$sys_dbLogin	= $tmp[2];$sys_dbPass		= $tmp[3];$sys_dbName		= 'template1';$db = new phpDBConnection($sys_dbType);$db->connect($sys_dbIP, $sys_dbLogin, $sys_dbPass, $sys_dbName, $sys_dbPort);require("features.php");switch ($lstParams['req_name']."::".$lstParams['req_cmd']) {	case "spaces::lst_get_data":		// -- spaces		$sql = "SELECT spcname, spcname, usename, spclocation, spcacl				FROM  pg_tablespace, pg_user				WHERE usesysid = spcowner AND ~SEARCH~				ORDER BY 1";		list_process($db, $lstParams, $sql);		break;			case "users::lst_get_data":		// -- users		$sql = "SELECT usename, usesysid, usename,					CASE WHEN usecreatedb THEN 'yes' ELSE '' END, 					CASE WHEN usesuper THEN 'yes' ELSE '' END, 					CASE WHEN usecatupd THEN 'yes' ELSE '' END, 					valuntil, useconfig 				FROM  pg_user				WHERE ~SEARCH~				ORDER BY usename";		list_process($db, $lstParams, $sql);		break;			case "users::lst_del_records":		$sql = "";		$ids = split(',', $lstParams['req_ids']);		foreach($ids as $k => $v) {			$sql .= "DROP USER $v;\\n";		}		print("top.execCommand(\"".$sql."\", 'top.elements.users.output();');");		break;			case "userAdd::edit_get_data";		$sql = "SELECT usename, '', usecreatedb, usesuper, valuntil				FROM  pg_user				WHERE usename = '".$lstParams['req_recid']."'";		edit_process($db, $lstParams, $sql);		break;			case "userAdd::edit_save_data":		$p = $_POST;		if ($lstParams['req_recid'] == '') {			$sql = "CREATE USER ".$p[user].($p[create_db] == 't' ? ' CREATEDB' : ' NOCREATEDB').($p[create_user] == 't' ? ' CREATEUSER' : ' NOCREATEUSER').				   ($p[pass] != "" ? " PASSWORD '".$p[pass]."'" : "").($p[valid_until] != '' ? " VALID UNTIL '".$p[valid_until]."'" : '').";";		} else {			$sql = "ALTER USER ".$lstParams['req_recid'].($p[create_db] == 't' ? ' CREATEDB' : ' NOCREATEDB').($p[create_user] == 't' ? ' CREATEUSER' : ' NOCREATEUSER').				   ($p[pass] != "" ? " ENCRYPTED PASSWORD '".$p[pass]."'" : "").($p[valid_until] != '' ? " VALID UNTIL '".$p[valid_until]."'" : " VALID UNTIL 'infinity'").";";			if ($lstParams['req_recid'] != $p[user]) {				$sql .= "\nALTER USER ".$lstParams['req_recid']." RENAME TO ".$p[user].";";			}		}		if ($sql != '') {			print(" <textarea id=sql>$sql</textarea>					<script> 						top.execCommand(document.getElementById('sql').value, 'top.elements.userAdd.saveDone()');					</script>");		} else {			print(" <script> top.elements.userAdd.saveDone();	</script>");		}		break;			case "groups::lst_get_data":		// -- groups		$sql = "SELECT groname, grosysid, groname, grolist				FROM  pg_group				ORDER BY groname";		$rs  = $db->execute($sql);		$sql = "";		while ($rs && !$rs->EOF) {			$f = $rs->fields;			$tmp = split(',', trim(trim($f[3], '{'), '}') );			$users = "";			foreach($tmp as $k=>$v) {				if ($v == '') continue;				$rss = $db->execute("SELECT usename FROM pg_user WHERE usesysid = ".$v);				if ($users != '') $users .= ", ";				$users .= $rss->fields[0];			}			if ($sql != '') $sql .= " UNION ALL ";			$sql .= "SELECT '".$f[0]."', '".$f[1]."','".$f[2]."', '$users' ";			$rs->moveNext();		}		if ($sql == '') $sql = "SELECT * FROM pg_class WHERE 1=2";		list_process($db, $lstParams, $sql);		break;			case "groups::lst_del_records":		$sql = "";		$ids = split(',', $lstParams['req_ids']);		foreach($ids as $k => $v) {			$sql .= "DROP GROUP $v;\\n";		}		print("top.execCommand(\"".$sql."\", 'top.elements.groups.output();');");		break;			case "groupAdd::edit_get_data";		$sql = "SELECT groname, grolist				FROM  pg_group				WHERE groname = '".$lstParams['req_recid']."'";		$rs  = $db->execute($sql);		$users = '';		if ($rs) {			$f = $rs->fields;			$tmp = split(',', trim(trim($f[1], '{'), '}') );			$users = "";			foreach($tmp as $k=>$v) {				if ($v == '') continue;				$rss = $db->execute("SELECT usename FROM pg_user WHERE usesysid = ".$v);				if ($users != '') $users .= ", ";				$users .= $rss->fields[0];			}		}		$sql = "SELECT groname, '$users'				FROM  pg_group				WHERE groname = '".$lstParams['req_recid']."'";		edit_process($db, $lstParams, $sql);		break;			case "groupAdd::edit_save_data":		$p = $_POST;		// find members		$sql = "SELECT groname, grolist				FROM  pg_group				WHERE groname = '".$lstParams['req_recid']."'";		$rs  = $db->execute($sql);		$users = '';		if ($rs) {			$f = $rs->fields;			$tmp = split(',', trim(trim($f[1], '{'), '}') );			$users = "";			foreach($tmp as $k=>$v) {				if ($v == '') continue;				$rss = $db->execute("SELECT usename FROM pg_user WHERE usesysid = ".$v);				if ($users != '') $users .= ", ";				$users .= $rss->fields[0];			}		}		$tmp1 = split(",", $users);		$tmp2 = split(",", $p[members]);		foreach ($tmp1 as $k=>$v) $tmp1[$k] = trim($v);		foreach ($tmp2 as $k=>$v) $tmp2[$k] = trim($v);		$adduser = "";		foreach ($tmp1 as $k=>$v) if (!in_array($v, $tmp2)) { if ($adduser != '') { $adduser .= ", "; } $adduser .= $v; }		$dropuser = "";		foreach ($tmp2 as $k=>$v) if (!in_array($v, $tmp1)) { if ($dropuser != '') { $dropuser .= ", "; } $dropuser .= $v; }				print_r($tmp1);		print_r($tmp2);				$sql = "";		// change group		if ($lstParams['req_recid'] == '' || $lstParams['req_recid'] == 'null') {			$sql = "CREATE GROUP ".$p[user].";\n";		} else {			if ($lstParams['req_recid'] != $p[user]) $sql = "ALTER GROUP ".$lstParams['req_recid']." RENAME TO ".$p[user].";\n";		}		// change members		if ($adduser != '')  { $sql .= "ALTER GROUP ".$p[user]." DROP USER $adduser;\n"; }		if ($dropuser != '') { $sql .= "ALTER GROUP ".$p[user]." ADD USER $dropuser;\n"; }		if ($sql != '') {			print(" <textarea id=sql>$sql</textarea>					<script> 						top.execCommand(document.getElementById('sql').value, 'top.elements.groupAdd.saveDone()');					</script>");		} else {			print(" <script> top.elements.groupAdd.saveDone();	</script>");		}		break;			case "vars::lst_get_data":		// -- server variables		$sql = "SELECT name, name, setting, 					".($features[set_desc] == 1 ? "replace(short_desc, '\\\', '') || COALESCE(extra_desc, '')" : "null").",					context, vartype, source, min_val, max_val				FROM  pg_settings				WHERE ~SEARCH~				ORDER BY name";		list_process($db, $lstParams, $sql);		break;			case "vars::search_field_list" :		$SQL = "SELECT DISTINCT category, category				FROM pg_settings				ORDER BY 1";		buildOptions($db, $lstParams, $SQL);		break;			case "activity::lst_get_data":		// -- running queries		$sql = "SELECT procpid, procpid, datname, usename, current_query, current_timestamp - query_start				FROM pg_stat_activity				ORDER BY query_start						";		list_process($db, $lstParams, $sql);		break;					default:		print("alert('List command is not recognized:  ".$lstParams['req_name']."::".$lstParams['req_cmd']."');");		break;}?>